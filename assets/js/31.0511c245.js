(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{57:function(t,a,e){"use strict";e.r(a);var r=e(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"git-常用命令分享"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令分享","aria-hidden":"true"}},[t._v("#")]),t._v(" git 常用命令分享")]),e("h2",{attrs:{id:"一、git-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、git-简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、git 简介")]),e("blockquote",[e("ol",[e("li",[t._v("git 属于分布式版本管理，更利于多人不同工作小组的相互协作")]),e("li",[t._v("相比于集中式管理，如"),e("code",[t._v("svn")]),t._v("来说，git 更加完善速度更快")])])]),e("h3",{attrs:{id:"_1-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 安装")]),e("p",[t._v("这个就不赘述了，直接网上下载就行")]),e("h3",{attrs:{id:"_2-配置-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置-git","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 配置 git")]),e("h4",{attrs:{id:"_2-1-用户信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-用户信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 用户信息")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git config --global user.name\ngit config --global user.email\n")])]),e("h4",{attrs:{id:"_2-2-查看配置信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-查看配置信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 查看配置信息")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git config --list\n")])]),e("h4",{attrs:{id:"_2-3-获取帮助信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-获取帮助信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.3 获取帮助信息")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git help config\n")])]),e("h2",{attrs:{id:"二、git-文件状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、git-文件状态","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、git 文件状态")]),e("h3",{attrs:{id:"_1-git-的三种状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-的三种状态","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. git 的三种状态")]),e("ol",[e("li",[t._v("已提交（committed）-> 本地仓库")]),e("li",[t._v("已修改（modified） -> 工作目录")]),e("li",[t._v("已暂存（staged）-> 暂存区域\n"),e("img",{attrs:{src:"http://cdn.jinyueyue.cn/15165923162466.jpg",alt:""}})])]),e("h3",{attrs:{id:"_2-git-工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. git 工作流程")]),e("ol",[e("li",[t._v("在工作目录中修改某些文件。")]),e("li",[t._v("对修改后的文件进行快照，然后保存到暂存区域。")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git add .\n")])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("提交更新，将保存在暂存区域的文件快照永久转储到 Git 目录中。")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git commit -m "msg"\n')])]),e("h2",{attrs:{id:"三、git-分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、git-分支管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、git 分支管理")]),e("h3",{attrs:{id:"_1-获取-git-仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取-git-仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 获取 git 仓库")]),e("blockquote",[e("p",[t._v("获取 git 仓库有两种方法")]),e("ol",[e("li",[t._v("在现存的目录下，通过导入所有文件来创建新的 Git 仓库")]),e("li",[t._v("从已有的 Git 仓库克隆出一个新的镜像仓库来。")])])]),e("h4",{attrs:{id:"_1-1-在现有的工作目录中初始化新仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-在现有的工作目录中初始化新仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 在现有的工作目录中初始化新仓库")]),e("ol",[e("li",[t._v("在 gitlab 或者 github 上新建一个项目，并且复制链接")]),e("li",[t._v("初始化本地仓库，并提交到本地")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("touch README.md     //创建说明文档\ngit init    //初始化本地仓库\ngit add .  //跟踪所有文件 跟踪某个文件直接将.替换成文件名即可\ngit commit -m ‘提交说明’\ngit remote add origin 远程仓库地址    //链接远程仓库\ngit push -u origin master   //创建一个 upStream （上传流），并将本地代码通过这个 upStream 推送到 别名为 origin 的仓库中的 master 分支上\n")])]),e("h4",{attrs:{id:"_1-2-直接克隆现有的项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-直接克隆现有的项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2 直接克隆现有的项目")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git clone ssh://git@gitlab.coohua.com:20755/business/newsearn.git\n")])]),e("h3",{attrs:{id:"_2-文件操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-文件操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 文件操作")]),e("h4",{attrs:{id:"_2-1-查看文件状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-查看文件状态","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 查看文件状态")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git status\n")])]),e("h4",{attrs:{id:"_2-2-跟踪文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-跟踪文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 跟踪文件")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git add 文件名\n")])]),e("h4",{attrs:{id:"_2-3-忽略文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-忽略文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.3 忽略文件")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cat .gitignore\n")])]),e("blockquote",[e("p",[t._v("有些文件是我们不想提交的，比如 node_modules，可以创建一个.gitignore 文件，然后在文件中将自己不想提交的文件添加就可以了")])]),e("h4",{attrs:{id:"_2-4-文件对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-文件对比","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.4 文件对比")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git diff    //可以查看尚未暂存的文件两次修改的差别\ngit diff --cached   //可以查看已经暂存起来文件的差别\n")])]),e("h4",{attrs:{id:"_2-5-提交文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-提交文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.5 提交文件")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git commit -m ""    //提交文件添加提交记录\ngit commit -a -m ""     //跨过 git add . 直接提交\n')])]),e("h4",{attrs:{id:"_2-6-移除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-移除文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.6 移除文件")]),e("blockquote",[e("p",[t._v("如果已经添加到缓存中的文件，想要从缓存中移除")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rm 文件名\n")])]),e("h4",{attrs:{id:"_2-7-查看提交记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-查看提交记录","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.7 查看提交记录")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git log\n")])]),e("blockquote",[e("p",[t._v("后面可以带参数，常用 "),e("code",[t._v("-p")]),t._v(" 选项展开显示每次提交的内容差异，用 "),e("code",[t._v("-2")]),t._v(" 则仅显示最近的两次更新")])]),e("h4",{attrs:{id:"_2-8-撤销修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-撤销修改","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.8 撤销修改")]),e("ul",[e("li",[t._v("修改最后一次修改")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git commit --amend\n")])]),e("ul",[e("li",[t._v("取消已经暂存的文件")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset HEAD <file>   //取消已经暂存的文件\n")])]),e("blockquote",[e("p",[t._v("git add 之后用 git status 完全可以查看到命令，所以不需要死记硬背")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("On branch master\nYour branch is up to date with 'origin/master'.\n\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tmodified:   idt-config.js\n\n")])]),e("ul",[e("li",[t._v("取消对文件的修改")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout -- <file>   //取消对文件的修改\n\n")])]),e("blockquote",[e("p",[t._v("git add 之后用 git status 完全可以查看到命令，所以不需要死记硬背")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('On branch master\nYour branch is up to date with \'origin/master\'.\n\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   idt-config.js\n\nno changes added to commit (use "git add" and/or "git commit -a")\n\n')])]),e("h2",{attrs:{id:"四、git-常用技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、git-常用技巧","aria-hidden":"true"}},[t._v("#")]),t._v(" 四、git 常用技巧")]),e("h3",{attrs:{id:"_1-常用操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-常用操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 常用操作")]),e("ul",[e("li",[t._v("从远程拉取代码"),e("br"),e("code",[t._v("git pull = git fetch + git merge")])]),e("li",[t._v("查看分支"),e("br"),e("code",[t._v("git branch")]),e("br"),e("code",[t._v("git branch -r")]),e("br"),t._v("\n用过之后就会发现有什么不一样")]),e("li",[t._v("切换分支"),e("br"),e("code",[t._v("git checkout <分支名>")])]),e("li",[t._v("创建分支"),e("br"),e("code",[t._v("git checkout -b <分支名>")])]),e("li",[t._v("合并代码"),e("br"),e("code",[t._v("git checkout master")]),e("code",[t._v("git merge 分支名")])]),e("li",[t._v("删除代码"),e("br"),e("code",[t._v("git branch -d iss53")])]),e("li",[t._v("回滚代码"),e("br"),e("code",[t._v("git revert log 名")])]),e("li",[t._v("放入缓存"),e("br"),e("code",[t._v("git stash")])]),e("li",[t._v("将缓存里的文件拿出来合并"),e("br"),e("code",[t._v("git stash pop")])]),e("li",[t._v("查看标签"),e("br"),e("code",[t._v("git tag")])]),e("li",[t._v("回滚到指定版本"),e("br"),e("code",[t._v("git reset --hard <commit ID号>")])]),e("li",[t._v("回滚后推送到远程分支"),e("br"),e("code",[t._v("git push -f origin master")])])]),e("h3",{attrs:{id:"_2-修改别名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改别名","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 修改别名")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git config --global alias.co checkout\n$ git config --global alias.br branch\n$ git config --global alias.ci commit\n$ git config --global alias.st status\n\n")])]),e("h3",{attrs:{id:"_3-解决冲突"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决冲突","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 解决冲突")]),e("ol",[e("li",[t._v("不同分支修改不同文件，git 会自动合并")]),e("li",[t._v("不同分支修改同一文件，如果没修改同一行或者同一部分的代码，git 也会自动合并")]),e("li",[t._v("不同分支修改了同一行代码，git 会等待人工合并之后再做处理")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<<<<<<< HEAD:index.html\n<div id="footer">contact : email.shi@github.com</div>\n=======\n<div id="footer">\nplease contact us at shi@github.com\n</div>\n>>>>>>> iss53:index.html\n\n')])]),e("blockquote",[e("p",[t._v("会使用"),e("code",[t._v("=======")]),t._v("分割，上半部分是 master 的，下半部分是分支的代码，手动删除"),e("code",[t._v("=======")]),t._v(","),e("code",[t._v("<<<<<<<")]),t._v(","),e("code",[t._v(">>>>>>>")]),t._v("这些标示后，重新提交即可。")])]),e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文档")]),e("p",[e("a",{attrs:{href:"https://gitee.com/progit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git（中文版）")])])])}],!1,null,null,null);a.default=i.exports}}]);