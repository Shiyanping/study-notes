(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{69:function(e,t,i){"use strict";i.r(t);var r=i(0),v=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"性能优化"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#性能优化","aria-hidden":"true"}},[e._v("#")]),e._v(" 性能优化")]),i("h2",{attrs:{id:"_1-请求过程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求过程","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. 请求过程")]),i("p",[i("strong",[e._v("输入网页之后的整个流程：")])]),i("ol",[i("li",[e._v("浏览器输入用户需要访问的域名")]),i("li",[e._v("DNS 将输入域名解析成 IP")]),i("li",[e._v("通过 IP 找到指定的机器或者集群")]),i("li",[e._v("反向代理通过负载均衡找到最好的机器")]),i("li",[e._v("服务器处理请求，返回数据")]),i("li",[e._v("浏览器处理请求")])]),i("p",[e._v("上面只是大致的网络请求资源的过程，其实底层的操作会更多，引用 W3C 里的一张图：")]),i("p",[i("img",{attrs:{src:"http://cdn.jinyueyue.cn/15516052836980.jpg",alt:""}})]),i("ol",[i("li",[i("p",[e._v("如果有旧的页面，就将旧的页面进行卸载。")])]),i("li",[i("p",[e._v("页面跳转，重定向。")])]),i("li",[i("p",[e._v("如果做了缓存，会查找缓存是否存在（优化的效果最大），带宽有限，重复性的资源可以使用缓存，减少带宽的压力。")])]),i("li",[i("p",[e._v("DNS（UDP 协议）解析域名。")])]),i("li",[i("p",[e._v("TCP 建立连接，在做性能优化时，TCP 可以使用长连接（keep-live）进行优化，减少三次握手和四次挥手的时间。")])]),i("li",[i("p",[e._v("浏览器发出请求（request）。")])]),i("li",[i("p",[e._v("服务器处理响应（response）。")])]),i("li",[i("p",[e._v("浏览器处理服务器返回的资源，刚接收到服务器返回的资源时，其实是一个文本文件，将文本文件解析成 HTML，然后处理 dom（domLoading -> domInteractive -> domContentLoaded -> domComplete），一直到 domComplete 之后，dom 树就生成完毕了。")])])]),i("blockquote",[i("p",[e._v("webSocket：属于永久链接，和长连接类似。")]),i("p",[e._v("事务：从头到尾的一整个流程，如果有一个操作错误，那就代表着整个流程都失败。")])]),i("h2",{attrs:{id:"_2-dns-解析"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-dns-解析","aria-hidden":"true"}},[e._v("#")]),e._v(" 2. DNS 解析")]),i("p",[e._v("域名系统，用于将域名转换成 IP，域名和 IP 对应的 key-value。")]),i("p",[e._v("顶级域名：shiyanping.com")]),i("p",[e._v("二级域名：www.shiyanping.com.cn")]),i("ol",[i("li",[e._v("浏览器发起查询，DNS 向根域名服务器（Root Server），TLD Server，Name Server，进行迭代查询。主要由运营商负责自己的 DNS，一般 DNS 都有缓存，为了查找更快，所以我们在换域名之后，一定要更新缓存。")]),i("li",[e._v("Root Server：查找具体域名后缀归哪个 TLD Server 服务器管，比如查找.com 后缀的域名归哪个 TLD Server 管。")]),i("li",[e._v("TLD Server：保存域名后缀（.com、.cn、.net）")]),i("li",[e._v("Name Server：保存具体顶级域名，二级域名，三级域名，找到域名对应的域名")])]),i("h2",{attrs:{id:"_3-tcp-三次握手和四次挥手"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-tcp-三次握手和四次挥手","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. TCP 三次握手和四次挥手")]),i("p",[e._v("TCP 的核心就是要需要建立一条稳定的通信链路，在请求资源的过程中，主要包括建立连接，数据传输，断开连接，TCP 的三次握手主要发生在建立连接的过程中，四次挥手主要发生在断开连接的过程中。")]),i("p",[i("strong",[e._v("三次握手：")])]),i("ol",[i("li",[e._v("客户端发送建连包（SYN），并带上响应号（seq=x）")]),i("li",[e._v("服务器接收到客户端的建连包之后做出回应，发出应答包（ACK），同事也发出服务端自己的建连包（SYN）。应答包主要回应客户端，标识服务器接受到了客户端发送的建连包，应答包中必须携带应答号（ACK=x+1），应答号在客户端发出的响应号的基础上+1；同时服务端还要发送一个自己的建连包给客户端，并带上服务端的响应号（SYN seq=y）。")]),i("li",[e._v("客户端收到服务端发出的应答包之后，表示自己的建连成功了，但是为了回应服务端的建连，还需要发送一个应答包，客户端的应答包中同样需要携带应答号，应答号是服务端发送响应号+1（ACK=y+1）。")])]),i("p",[e._v("客户端和服务端都需要来回确认收到包，防止丢包，每次收到包之后，标识都需要+1。")]),i("p",[i("img",{attrs:{src:"http://cdn.jinyueyue.cn/15516052971502.jpg",alt:""}})]),i("p",[i("strong",[e._v("数据传输：")])]),i("p",[e._v("将一个大数据拆分成多个小数据包，每个小数据包都有自己的标识，服务端接受到各个小数据包之后，进行组装，如果缺少某个数据包，服务端会向客户端发送一个重新请求的指令。")]),i("p",[i("img",{attrs:{src:"http://cdn.jinyueyue.cn/15516053115014.jpg",alt:""}})]),i("p",[i("strong",[e._v("四次挥手：")])]),i("ol",[i("li",[e._v("正常情况下客户端先发起第一次挥手（FIN seq=x+2 ACK=y+1），特殊情况：服务器超时，服务器异常")]),i("li",[e._v("服务器接受到挥手请求，服务器发送应答包给客户端，应答客户端的挥手（ACK x+3）。")]),i("li",[e._v("服务器向客户端发送挥手请求包，服务端再次发送挥手请求的原因，主要是为了确定自己没做完的工作，客户端还要不要（FIN seq=y+1），释放服务器的内容。")]),i("li",[e._v("客户端接收到挥手请求，客户端发送应答包给服务端，彻底关闭数据传输（ACK=y+2）。")])]),i("p",[i("img",{attrs:{src:"http://cdn.jinyueyue.cn/15516053259057.jpg",alt:""}})]),i("blockquote",[i("p",[e._v("单工：单向通信，例：村东头的喇叭")]),i("p",[e._v("双工：双向通信")]),i("p",[e._v("半双工：例：对讲机，默认是接受状态，讲话的时候按住按钮，同一时间只能执行一件事。")]),i("p",[e._v("全双工：例：电话，同一时间接受和发送双向通信都可以。")]),i("p",[e._v("seq：响应号")]),i("p",[e._v("ACK：应答号")]),i("p",[e._v("SYN：建立连接的包")]),i("p",[e._v("FIN：断开连接的包")])]),i("h2",{attrs:{id:"_4-浏览器缓存机制"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器缓存机制","aria-hidden":"true"}},[e._v("#")]),e._v(" 4. 浏览器缓存机制")]),i("blockquote",[i("p",[e._v("Expiress：启用缓存，并且告诉缓存时间")]),i("p",[e._v("Cache-Control：")]),i("ol",[i("li",[e._v("no-cache：不需要缓存")]),i("li",[e._v("时间戳：在本地保存多久")])]),i("p",[e._v("Etag：服务器在相应请求时，给当前资源在服务器打上唯一的标识")]),i("p",[e._v("If-None-Match：当资源过期时，发现资源有 Etag")]),i("p",[e._v("last-Modified：标识响应资源的最后修改时间")]),i("p",[e._v("If-Modified-None")])]),i("p",[e._v("静态资源缓存，动态资源，身份验证的资源不缓存")])])}],!1,null,null,null);t.default=v.exports}}]);