(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{68:function(t,_,e){"use strict";e.r(_);var v=e(0),i=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"http-那些事"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-那些事","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 那些事")]),e("h2",{attrs:{id:"_1-http-请求模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-请求模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. HTTP 请求模型")]),e("p",[t._v("HTTP 请求模型中分成 client 端和 server 端，client 端和 server 端 如何区分，就看请求的状态，如果是发起请求，那就是 client 端，如果是接收请求就是 server 端。")]),e("p",[t._v("比如我们将 node 和前端放一起，使用 node 做中间件，那 node 相对于前端来说是 server 端，但是 node 如果相对于其他服务端，比如相对于 java 来说，node 就是 client 端。")]),e("h2",{attrs:{id:"_2-输入网址之后发生了什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-输入网址之后发生了什么","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 输入网址之后发生了什么")]),e("p",[t._v("用户在输入网址之后，为什么可以得到相应域名对应的页面呢，其实后续发生了很多隐藏的行为：")]),e("ol",[e("li",[t._v("用户输入域名确定之后，通过 DNS 解析域名，将域名解析出对应的 IP（如果连续向同一个域名发送请求，DNS 只会解析一次域名，会将域名和 IP 的映射关系进行缓存）。")]),e("li",[t._v("浏览器向对应的 IP 发送请求，在通信过程中，通过中继器（路由器）将请求持续转发，一直转发到指定的 IP。")]),e("li",[t._v("一个 IP 可能对应一个集群或者一个机房，通过反向代理服务器做的负载均衡分配给某个服务器去处理用户请求。")]),e("li",[t._v("服务器将资源进行返回。")]),e("li",[t._v("浏览器处理 html 及其他静态资源，渲染给用户。")])]),e("h2",{attrs:{id:"_3-http-协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-协议","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. HTTP 协议")]),e("p",[t._v("HTTP 协议主要对客户机到服务器请求（Request）和服务器到客户机的请求（Response）进行约束和规范。")]),e("p",[t._v("HTTP 协议中有两种协议栈，主要分为 "),e("code",[t._v("ISO/OSI")]),t._v(" 和 "),e("code",[t._v("TCP/IP")]),t._v(" 两种协议栈。")]),e("h3",{attrs:{id:"_3-1-tcp-ip-协议栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-tcp-ip-协议栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 TCP/IP 协议栈")]),e("p",[t._v("目前大多数使用的一般都是 "),e("code",[t._v("TCP/IP")]),t._v(" 协议，"),e("code",[t._v("TCP/IP")]),t._v(" 协议其中包含四层网络分层：应用层，传输层，网络层，网络接口层。")]),e("p",[e("code",[t._v("TCP/IP")]),t._v(" 协议栈对应用层划分不细致，所以就导致了 HTTP 协议不能保存会话。")]),e("ul",[e("li",[t._v("应用层")])]),e("p",[t._v("应用层是和代码直接接触的网络协议层，其中包含了很多协议，包括 "),e("code",[t._v("HTTP")]),t._v(" 协议，"),e("code",[t._v("SSH")]),t._v(" 协议，"),e("code",[t._v("DNS")]),t._v(" 协议，发送邮件的 "),e("code",[t._v("SMTP")]),t._v(" 协议，接受邮件的 "),e("code",[t._v("POP")]),t._v(" 协议，文件传输协议 "),e("code",[t._v("FTP")]),t._v(" 等。")]),e("ul",[e("li",[t._v("传输层")])]),e("p",[t._v("传输层直接和应用层进行打交道，对上层应用层提供网络连接中两台计算机之间的数据传输，其中包括主要的两个协议："),e("code",[t._v("TCP")]),t._v(" 协议和 "),e("code",[t._v("UDP")]),t._v(" 协议。")]),e("p",[e("code",[t._v("TCP")]),t._v("（传输控制协议），可靠协议，"),e("code",[t._v("UDP")]),t._v("（用户数据报协议），不可靠协议，只管发送。")]),e("ul",[e("li",[t._v("网络层")])]),e("p",[t._v("网络层用来处理网络上流动的数据包，当对方计算机中包含多台计算机时，会从众多计算机中选择其中一条传输路线。")]),e("p",[e("code",[t._v("IP")]),t._v(" 就属于网络层。")]),e("p",[t._v("当我们在命令行中使用 "),e("code",[t._v("ping www.baidu.com")]),t._v(" 时，其实就执行在网络层，使用了 ICMP 数据报文去检测当前 "),e("code",[t._v("ping")]),t._v(" 的域名是否能 "),e("code",[t._v("ping")]),t._v(" 通，对应的 "),e("code",[t._v("IP")]),t._v(" 具体是什么。")]),e("ul",[e("li",[t._v("网络接口层")])]),e("p",[t._v("数据链路层主要是一些用来处理连接网络的硬件部分，包括：网卡，交换机，操作系统等硬件设备。")]),e("h3",{attrs:{id:"_3-2-ios-osi-协议栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-ios-osi-协议栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 IOS/OSI 协议栈")]),e("p",[t._v("还有一种协议栈是 "),e("code",[t._v("IOS/OSI")]),t._v("，"),e("code",[t._v("IOS/OSI")]),t._v(" 协议栈分层会比 "),e("code",[t._v("TCP/IP")]),t._v(" 协议栈分层更详细，分为七层：应用层，表示层，会话层，传输层，网络层，数据链路层，物理层。")]),e("p",[e("code",[t._v("IOS/OSI")]),t._v(" 协议栈的分层，其实是将 "),e("code",[t._v("TCP/IP")]),t._v(" 协议栈中的应用层和网络接口层划分的更细了，将应用层划分成了应用层，表示层，会话层，将网络接口层划分成了数据链路层，物理层。")]),e("h3",{attrs:{id:"_3-3-ip、tcp、dns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-ip、tcp、dns","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 IP、TCP、DNS")]),e("p",[t._v("IP 与 IP 地址不同，IP 是传输数据包用的协议，IP 包含 IP 地址和 MAC 地址。")]),e("p",[t._v("IP 地址指明了节点被分配到的地址，MAC 地址是指网卡所属的固定地址。IP 地址可以与 MAC 地址进行配对，IP 地址可更换，MAC 地址一般不会改变。")]),e("p",[e("strong",[t._v("TCP 三次握手")]),t._v("：TCP -> SYN -> ACK")]),e("ul",[e("li",[t._v("发送端首先发送一个带有 SYN 的数据包给对方")]),e("li",[t._v("接收端回传一个带有 SYN/ACK 标志的数据包表示确认消息")]),e("li",[t._v("发送端再回传一个 ACK 标志的数据包，表示“握手”结束")])]),e("p",[t._v("DNS 服务提供域名到 IP 地址之间的解析服务。")]),e("h2",{attrs:{id:"_4-http-工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-http-工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. HTTP 工作流程")]),e("h3",{attrs:{id:"_4-1-工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1 工作流程")]),e("p",[t._v("一次 HTTP 工作流程，属于一个事务，如果一个过程失败了，那就会失败。")]),e("p",[t._v("HTTP 工作流程主要分为以下四步：")]),e("ol",[e("li",[t._v("客户机需要和服务器建连，当用户输入一个网址敲回车之后，HTTP 就开始工作了，首先让客户机和服务器建连。")]),e("li",[t._v("建连之后，客户机向服务器发出请求（Request），其中包括请求行，请求报头，请求正文。")]),e("li",[t._v("服务器接受到请求信息之后，对请求信息进行处理，然后给客户机返回信息，返回的信息中包括状态行，响应报头，响应正文。")]),e("li",[t._v("客户机对服务器返回回来的信息做处理，并进行展示。")])]),e("blockquote",[e("p",[t._v("URI 和 URL 的区别，URI 指的是资源真正的路径，URL 不一定是真正，可能会包含重定向地址")])]),e("h3",{attrs:{id:"_4-2-请求与响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-请求与响应","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2 请求与响应")]),e("p",[t._v("HTTP 请求组成：请求行、消息报头、请求正文。")]),e("p",[t._v("HTTP 响应组成：状态行、消息报头、响应正文。")]),e("p",[e("img",{attrs:{src:"http://cdn.jinyueyue.cn/15482432911160.jpg",alt:""}})]),e("blockquote",[e("p",[t._v("tips\n请求头中如果有"),e("code",[t._v(":")]),t._v("表示该参数是"),e("code",[t._v("http2")]),t._v("的请求头信息。\n在做爬虫的时记得修改请求头中的来源"),e("code",[t._v("Referer")]),t._v("，和用户标识 "),e("code",[t._v("User-Agent")]),t._v("，防止被人发现是爬虫。")])]),e("h4",{attrs:{id:"_4-2-1-常用的请求报头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-常用的请求报头","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2.1 常用的请求报头")]),e("ul",[e("li",[t._v("Accept：请求报头域用于指定客户端接受哪些类型的信息。eg:Accept:image/gif，Accept:text/ htmlAccept-Charset 请求报头域用于指定客户端接受的字符集。Accept-Encoding:Accept-Encoding 请求报 头域类似于 Accept，但是它是用于指定可接受的内容编码。")]),e("li",[t._v("Accept-Language：请求报头域类似于 Accept，但是它是用于指定一种自然语言。")]),e("li",[t._v("Authorization：请求报头域主要用于证明客户端有权查看某个资源。当浏览器访问一个页面时，如果收到服 务器的响应代码为 401(未授权)，可以发送一个包含 Authorization 请求报头域的请求，要求服务器对其进 行验证。")]),e("li",[t._v("Host：请求报头域主要用于指定被请求资源的 Internet 主机和端口号，它通常从 HTTP URL 中提取出来的，发 送请求时，该报头域是必需的。")]),e("li",[t._v("User-Agent：请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。")])]),e("h4",{attrs:{id:"_4-2-2-常用的响应报头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-常用的响应报头","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2.2 常用的响应报头")]),e("ul",[e("li",[t._v("Location：响应报头域用于重定向接受者到一个新的位置。Location 响应 报头域常用在更换域名的时候。")]),e("li",[t._v("Server：响应报头域包含了服务器用来处理请求的软件信息。与 User- Agent 请求报头域是相对应的。")]),e("li",[t._v("WWW-Authenticate：响应报头域必须被包含在 401(未授权的)响应消息 中，客户端收到 401 响应消息时候，并发送 Authorization 报头域请求服 务器对其进行验证时，服务端响应报头就包含该报头域。")])]),e("h4",{attrs:{id:"_4-2-3-常用的实体报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-常用的实体报文","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2.3 常用的实体报文")]),e("p",[t._v("在请求和响应中都可以发送一个实体，一个实体由实体报头和实体正文组成，实体报头定义了是否有实体正文和请求所标识的资源元信息。")]),e("p",[t._v("常用的实体报文有：")]),e("ul",[e("li",[t._v("Content-Encoding：实体报头域被用作媒体类型的修饰符，它的值指示了已经被应用到实体正文的 附加内容的编码，因而要获得 Content-Type 报头域中所引用的媒体类型，必须采用相应的解码 机制。")]),e("li",[t._v("Content-Language：实体报头域描述了资源所用的自然语言。")]),e("li",[t._v("Content-Length：实体报头域用于指明实体正文的长度，以字节方式存储的十进制数字来表示。")]),e("li",[t._v("Content-Type：实体报头域用语指明发送给接收者的实体正文的媒体类型。")]),e("li",[t._v("Last-Modified：实体报头域用于指示资源的最后修改日期和时间。")]),e("li",[t._v("Expires：实体报头域给出响应过期的日期和时间。")])]),e("h3",{attrs:{id:"_4-3-请求方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-请求方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3 请求方法")]),e("p",[t._v("我们平时用到的请求方式其实只有 GET，POST，OPTIONS，因为正常开发中有 GET，POST 就够了，但是请求方式其实还有很多种。")]),e("p",[e("strong",[t._v("完整的请求方式：")])]),e("ul",[e("li",[t._v("GET：请求获取 Request-URI 所标识的资源（查）")]),e("li",[t._v("POST：在 Request-URI 所标识的资源后附加新的数据（改）")]),e("li",[t._v("PUT：请求服务器存储一个资源，并用 Request-URI 作为其标识（增）")]),e("li",[t._v("DELETE：请求服务器删除 Request-URI 所标识的资源（删）")]),e("li",[t._v("OPTIONS：请求查询服务器的性能，或者查询与资源相关的选项和需求，OPTIONS 属于预请求，一般跨域的时候会出现。")]),e("li",[t._v("CONNECT：HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器")]),e("li",[t._v("HEAD：请求获取由 Request-URI 所标识的资源的响应消息报头")]),e("li",[t._v("TRACE：请求服务器回送收到的请求信息，主要用于测试或诊断")])]),e("p",[t._v("在我们平时开发中，其实 GET 和 POST 都会使用，但是并没有明确区分，有的时候会使用 GET，有的时候会使用 POST，其实 GET 和 POST 还是有一些区别的。大部分人应该都知道 GET 请求会将参数携带到请求 url 后面，POST 不会，这只是其中一个差别而已，其实还有很多区别：")]),e("p",[e("strong",[t._v("如：")])]),e("ul",[e("li",[t._v("GET 请求浏览器回退是无害的，但是 POST 会重新发送请求")]),e("li",[t._v("GET 产生的地址会被收藏，但是 POST 不会")]),e("li",[t._v("GET 会被浏览器主动缓存，而 POST 的不会，需要手动设置")]),e("li",[t._v("GET 请求只能进行 url 编码，而 POST 支持多种编码方式")]),e("li",[t._v("GET 请求的参数会被完整保留到历史记录里，POST 参数不会保存")]),e("li",[t._v("GET 请求在 url 中传送的参数有长度限制，POST 没有")]),e("li",[t._v("对参数的数据类型，GET 只接受 ASCII 字符，POST 没有限制")]),e("li",[t._v("GET 参数会暴露在 url 中，不要放敏感信息")]),e("li",[t._v("GET 参数通过 url 传递，POST 通过 request body 中")])]),e("h3",{attrs:{id:"_4-4-http-状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-http-状态码","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.4 HTTP 状态码")]),e("ul",[e("li",[t._v("1xx - 请求已接收，继续处理")]),e("li",[t._v("2xx - 表示处理成功，如 200\n"),e("ul",[e("li",[t._v("200：客户端请求成功")]),e("li",[t._v("206：客户端发送了一个带有 Range 的 GET 请求头，服务器完成了他（video，audio）")])])]),e("li",[t._v("3xx - 需要重定向，浏览器直接跳转\n"),e("ul",[e("li",[t._v("301：已经转移到新的 url")]),e("li",[t._v("302：临时转移到了新的 url")]),e("li",[t._v("304：缓存，也被称为本地重定向")])])]),e("li",[t._v("4xx - 客户端请求错误，如 404\n"),e("ul",[e("li",[t._v("400：客户端有语法错误")]),e("li",[t._v("401：请求未授权（参数和方式可能错误）")]),e("li",[t._v("403：资源禁止被访问")]),e("li",[t._v("404：资源不存在")])])]),e("li",[t._v("5xx - 服务端错误\n"),e("ul",[e("li",[t._v("500：服务器错误")]),e("li",[t._v("503：服务器宕机或者过载")])])])]),e("h2",{attrs:{id:"_5-cookie-和-session（待补充）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-cookie-和-session（待补充）","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. Cookie 和 Session（待补充）")]),e("p",[t._v("Session 一直存在服务器中")]),e("p",[t._v("cookie 在用户首次登录时，由服务端生成，并添加到浏览器中，浏览器后续请求时，将获取到的 cookie 添加到请求头中，服务器取到 cookie 之后进行登录验证")]),e("h2",{attrs:{id:"_6-http-缓存（待补充）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-http-缓存（待补充）","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. HTTP 缓存（待补充）")]),e("p",[t._v("浏览器缓存可以放到内存中，也可以放到硬盘中")]),e("p",[t._v("缓存的优点：")]),e("ul",[e("li",[t._v("减少网络请求，减少带宽消耗")]),e("li",[t._v("减少相应延迟")])]),e("h2",{attrs:{id:"_7-https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-https","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. HTTPS")]),e("p",[t._v("HTTPS 使用不对称加密，不对称加密中加密手段和解密手段是不可逆的。还有一个对称加密，加密手段和解密手段是可逆的。")]),e("p",[t._v("HTTPS 使用 TLS 协议，TLS 协议分为四个子协议：握手协议，密钥配置切换协议（公钥，私钥），应用数据协议（数据如何处理），报警协议（检测证书是否过期，过期之后如何通知站长）。")]),e("p",[t._v("名词解释：")]),e("p",[t._v("数字证书：由 CA 签发")]),e("p",[t._v("CA：数字证书签发机构")]),e("h2",{attrs:{id:"_8-http-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-http-2-0","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. HTTP 2.0")]),e("ul",[e("li",[t._v("使用二进制格式传输，更加高效，更加紧凑。")]),e("li",[t._v("对报头进行压缩，降低开销")]),e("li",[t._v("多路复用（linux 中网络编程的一个手段），一个网络连接实现并发传输")]),e("li",[t._v("服务器主动推送，减少请求延迟")]),e("li",[t._v("默认使用加密")])]),e("blockquote",[e("p",[t._v("将 HTTPS 和 HTTP1.1 进行整合，默认加密。目前大部分网站正在向 HTTP2.0 迁移。")])]),e("blockquote",[e("p",[t._v("HTTP2.0 默认是加密的，所以访问网页的时候，协议默认是 https，端口号默认是 443。")])]),e("p",[t._v("1 字节是 8 个比特位")]),e("h2",{attrs:{id:"_9-http-和反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-http-和反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 9. HTTP 和反向代理")]),e("p",[t._v("正向代理：本地服务器访问外网服务器，中间使用代理服务器去做代理，客户机访问代理服务器，代理服务器然后访问外网服务器。")]),e("p",[t._v("反向代理：客户机在外网，访问的服务器在内网中，我们客户机不能直接访问服务器，反向代理给服务器做代理，让客户机可以访问外网的服务器。（nginx）")]),e("p",[t._v("反向代理的作用：")]),e("ul",[e("li",[t._v("加密，SSL 加速（节省 tomcat 加密的操作）")]),e("li",[t._v("负载均衡")]),e("li",[t._v("缓存静态内容（将反向代理当成一个静态资源服务器，速度快）")]),e("li",[t._v("压缩")]),e("li",[t._v("减速上传（百度云上传下载限速）")]),e("li",[t._v("安全（服务器在内网，如果有黑客想攻击内网服务器，必须首先攻破反向代理）")]),e("li",[t._v("外网发布")])]),e("p",[t._v("nginx 配置反向代理：")]),e("p",[t._v("在 nginx.conf 中 server 代码块之上。")]),e("p",[e("img",{attrs:{src:"http://cdn.jinyueyue.cn/15484057919879.jpg",alt:""}})]),e("p",[t._v("在 server 代码块之中配置对应的反向代理")]),e("p",[e("img",{attrs:{src:"http://cdn.jinyueyue.cn/15484060314659.jpg",alt:""}})])])}],!1,null,null,null);_.default=i.exports}}]);