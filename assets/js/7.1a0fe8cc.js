(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{84:function(t,a,r){"use strict";r.r(a);var e=r(0),_=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"进程，线程，协程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程，线程，协程","aria-hidden":"true"}},[t._v("#")]),t._v(" 进程，线程，协程")]),r("h2",{attrs:{id:"_1-进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 进程")]),r("p",[t._v("进程主要分配系统资源，系统资源主要是 cpu，内存，进程是系统能调度的一种单位，平时我们看到的.exe，打开运行时就算一个进程。")]),r("p",[t._v("进程背后的功能主要是进行运算，进程在执行时，会暂用 cpu，使用内存。")]),r("p",[t._v("如果是单核的操作系统会利用时间切片将 cpu 分配给不同的进程，同一时间 cpu 只能运行一个进程；如果是多核的，那就是一个核心同一时间可以运行一个进程。")]),r("p",[t._v("每个进程下会有多个线程。")]),r("p",[t._v("操作系统在设计时，主要遵循以下三点：")]),r("ol",[r("li",[t._v("以多进程形式，允许多个任务同时使用")]),r("li",[t._v("以多线程形式，允许单个任务分成不同的部分分别执行")]),r("li",[t._v("提供协调机制，一方面防止进程和线程中的任务产生冲突，另外一方面允许进程和线程之间的资源来回调用")])]),r("p",[r("img",{attrs:{src:"http://cdn.jinyueyue.cn/15502214272225.jpg",alt:""}})]),r("p",[t._v("一个进程中有多个内存空间，进程可以分为主进程和子进程，比如 nginx，最先开始跑的是主进程，当需要工作的时候会开一个子进程进行工作，当工作结束之后，会关闭子进程，主进程在工作进程工作中，主要负责调度。")]),r("h2",{attrs:{id:"_2-线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 线程")]),r("p",[t._v("线程是操作系统能够运行调度的最小单位。")]),r("p",[t._v("线程依附于进程，在进程中，最少要有一个线程。线程可以共享进程的数据。线程本身也可以拥有自己的数据。")]),r("p",[t._v("计算机本身有协调功能，可以协调进程和线程的资源，防止资源争抢。")]),r("p",[t._v("进程和线程的资源共享：")]),r("p",[r("img",{attrs:{src:"http://cdn.jinyueyue.cn/15502224288625.jpg",alt:""}})]),r("p",[t._v("在一个进程中开了多个线程时，代码，数据，文件是共享的，线程需要复制各自的寄存器和栈。")]),r("h2",{attrs:{id:"_3-协程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-协程","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 协程")]),r("p",[t._v("协程是一种用户态的轻量级线程，不会利用多核资源。")]),r("h2",{attrs:{id:"_4-运算场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-运算场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 运算场景")]),r("ul",[r("li",[t._v("IO 密集型")])]),r("p",[t._v("输入（将数据给 cpu）输出（cpu 处理完之后将数据吐出）密集型，计算机内部和外部进行频繁的数据交换。")]),r("p",[t._v("类似：路由器，交换机。网卡属于一个 IO 设备，对网络进行输入输出。CPU 和数据总线进行交互。")]),r("p",[t._v("因为 IO 密集型会频繁让 cpu 和数据总线进行交互，就会导致硬件操作会很慢。")]),r("p",[r("strong",[t._v("发展历程：")])]),r("p",[t._v("最初 IO 密集型使用多进程（nginx）完成；后续发展出了多线程，一个进程中包含多个线程，线程消耗的内存比进程少，可以节省一部分系统资源；后续发展出了事件驱动，比如：node.js；再后来使用协程，比事件驱动又更近一步。")]),r("ul",[r("li",[t._v("运算密集型/CPU 密集型")])]),r("p",[t._v("数据运算比较复杂的类型。")]),r("p",[r("strong",[t._v("发展历程：")])]),r("p",[t._v("多进程 -> 多线程")]),r("h2",{attrs:{id:"_5-补充"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-补充","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 补充")]),r("p",[t._v("进程，线程，协程，在切换的时候都需要消耗内存，所以并不是来回切换，或者一个核跑多个进程就是好的，像 node 就是一个核跑一个进程，减少内存消耗，一般一个核跑一个进程可以达到计算机 cpu 最优的使用。")]),r("p",[t._v("在切换和调度中，消耗的内存的大小顺序：进程 > 线程 > 协程。")]),r("p",[t._v("硬件 -> 操作系统（linux 内核） -> 支持库 -> 用户态（关机）")])])}],!1,null,null,null);a.default=_.exports}}]);