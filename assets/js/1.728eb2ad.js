(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{90:function(n,t,e){"use strict";e.r(t);var a=e(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"vue-中的动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-中的动画","aria-hidden":"true"}},[n._v("#")]),n._v(" vue 中的动画")]),e("blockquote",[e("p",[n._v("vue 中的动画主要依靠"),e("code",[n._v("transition")]),n._v("这个控件，关于 transition 这个 api 可以上官网查看"),e("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#transition",target:"_blank",rel:"noopener noreferrer"}},[n._v("vue 中的 transition")])])]),e("h3",{attrs:{id:"vue-中使用-css-动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-中使用-css-动画","aria-hidden":"true"}},[n._v("#")]),n._v(" vue 中使用 css 动画")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!doctype html>\n<html>\n\n<head>\n    <meta charset="UTF-8">\n    <title>Vue中CSS动画原理</title>\n    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">\n    <style>\n        .fade-enter,\n        .fade-leave-to {\n            opacity: 0;\n        }\n\n        .fade-enter-active,\n        .fade-leave-active {\n            transition: opacity 1s;\n        }\n    </style>\n</head>\n\n<body>\n    <div id="container">\n        <transition name="fade">\n            <component :is="tabName"></component>\n        </transition>\n\n        <button @click="switchNav">switch</button>\n    </div>\n</body>\n<script src="https://cdn.bootcss.com/vue/2.5.0/vue.js"><\/script>\n<script>\n    Vue.component(\'child-one\', {\n        template: `<div v-once>child-one</div>`\n    });\n\n    Vue.component(\'child-two\', {\n        template: `<div v-once>child-two</div>`\n    });\n\n    var vm = new Vue({\n        el: "#container",\n        data: function () {\n            return {\n                tabName: \'child-one\'\n            }\n        },\n        methods: {\n            switchNav: function () {\n                this.tabName = this.tabName == \'child-one\' ? \'child-two\' : \'child-one\'\n            }\n        }\n    });\n<\/script>\n\n</html>\n')])]),e("h3",{attrs:{id:"vue-中-animate-css-动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-中-animate-css-动画","aria-hidden":"true"}},[n._v("#")]),n._v(" vue 中 animate.css 动画")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!doctype html>\n<html>\n\n<head>\n    <meta charset="UTF-8">\n    <title>在Vue中使用 animate.css 库</title>\n    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">\n    <link rel="stylesheet" href="https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css">\n</head>\n\n<body>\n    <div id="container">\n        <transition enter-active-class="animated fadeIn"\n                    leave-active-class="animated shake">\n            <div v-show="show">animation</div>\n        </transition>\n\n        <button @click="switchNav">toggle</button>\n    </div>\n</body>\n<script src="https://cdn.bootcss.com/vue/2.5.0/vue.js"><\/script>\n<script>\n    var vm = new Vue({\n        el: "#container",\n        data: function () {\n            return {\n                show: true\n            }\n        },\n        methods: {\n            switchNav: function () {\n                this.show = !this.show;\n            }\n        }\n    });\n<\/script>\n\n</html>\n')])]),e("h3",{attrs:{id:"在-vue-中同时使用过渡和动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-vue-中同时使用过渡和动画","aria-hidden":"true"}},[n._v("#")]),n._v(" 在 vue 中同时使用过渡和动画")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!doctype html>\n<html>\n\n<head>\n    <meta charset="UTF-8">\n    <title>在Vue中同时使用过渡和动画</title>\n    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">\n    <link rel="stylesheet" href="https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css">\n    <style>\n        .fade-enter,\n        .fade-leave-to {\n            opacity: 0;\n        }\n        .fade-enter-active,\n        .fade-leave-active {\n            transition: opacity 2s;\n        }\n    </style>\n</head>\n\n<body>\n    <div id="container">\n        <transition name="fade"\n                    appear\n                    :duration="{enter: 1000, leave: 3000}"\n                    enter-active-class="animated jello fade-enter-active"\n                    leave-active-class="animated tada fade-leave-active"\n                    appear-active-class="animated jello fade-enter-active">\n            <div v-show="show">animation</div>\n        </transition>\n\n        <button @click="switchNav">toggle</button>\n    </div>\n</body>\n<script src="https://cdn.bootcss.com/vue/2.5.0/vue.js"><\/script>\n<script>\n    var vm = new Vue({\n        el: "#container",\n        data: function () {\n            return {\n                show: true\n            }\n        },\n        methods: {\n            switchNav: function () {\n                this.show = !this.show;\n            }\n        }\n    });\n<\/script>\n\n</html>\n')])]),e("h3",{attrs:{id:"vue-中的-js-动画与-velocity-js-的结合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-中的-js-动画与-velocity-js-的结合","aria-hidden":"true"}},[n._v("#")]),n._v(" Vue 中的 Js 动画与 Velocity.js 的结合")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!doctype html>\n<html>\n\n<head>\n    <meta charset="UTF-8">\n    <title>Vue中的 Js 动画与 Velocity.js 的结合</title>\n    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">\n    <link rel="stylesheet" href="https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css">\n</head>\n\n<body>\n    <div id="container">\n        <transition @before-enter="handleBeforeEnter"\n                    @enter="handleEnter"\n                    @after-enter="handleAfterEnter">\n            <div v-show="show">animation</div>\n        </transition>\n\n        <button @click="switchNav">toggle</button>\n    </div>\n</body>\n<script src="https://cdn.bootcss.com/vue/2.5.0/vue.js"><\/script>\n<script src="https://cdn.bootcss.com/velocity/2.0.2/velocity.js"><\/script>\n<script>\n    var vm = new Vue({\n        el: "#container",\n        data: function () {\n            return {\n                show: true\n            }\n        },\n        methods: {\n            switchNav: function () {\n                this.show = !this.show;\n            },\n            handleBeforeEnter: function(el) {\n                el.style.opacity = 0;\n            },\n            handleEnter: function(el, done) {\n                Velocity(el, {opacity: 1}, {duration: 1000, complete: done});\n            },\n            handleAfterEnter: function(el) {\n                console.log(\'动画结束\');\n            }\n        }\n    });\n<\/script>\n\n</html>\n')])]),e("h3",{attrs:{id:"vue-中多个元组件的过渡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-中多个元组件的过渡","aria-hidden":"true"}},[n._v("#")]),n._v(" Vue 中多个元组件的过渡")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!doctype html>\n<html>\n\n<head>\n    <meta charset="UTF-8">\n    <title>Vue中多个元组件的过渡</title>\n    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">\n    <style>\n        .v-enter,\n        .v-leave-to {\n            opacity: 0;\n        }\n\n        .v-enter-active,\n        .v-leave-active {\n            transition: opacity 1s;\n        }\n    </style>\n</head>\n\n<body>\n    <div id="container">\n        <transition mode="out-in">\n            <component :is="type"></component>\n        </transition>\n\n        <button @click="switchNav">toggle</button>\n    </div>\n</body>\n<script src="https://cdn.bootcss.com/vue/2.5.0/vue.js"><\/script>\n<script>\n\n    Vue.component(\'child-one\', {\n        template: \'<div>child-one</div>\'\n    })\n\n    Vue.component(\'child-two\', {\n        template: \'<div>child-two</div>\'\n    })\n\n    var vm = new Vue({\n        el: "#container",\n        data: function () {\n            return {\n                type: \'child-one\'\n            }\n        },\n        methods: {\n            switchNav: function () {\n                this.type = this.type == \'child-one\' ? \'child-two\' : \'child-one\';\n            }\n        }\n    });\n<\/script>\n\n</html>\n')])]),e("h3",{attrs:{id:"封装-vue-中的动画组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#封装-vue-中的动画组件","aria-hidden":"true"}},[n._v("#")]),n._v(" 封装 vue 中的动画组件")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<html>\n\n<head>\n    <meta charset="UTF-8">\n    <title>封装vue中的动画组件</title>\n    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">\n</head>\n\n<body>\n    <div id="container">\n        <fade :show="show">\n            <div>hello transition</div>\n        </fade>\n        <button @click="handleClick">toggle</button>\n    </div>\n</body>\n<script src="https://cdn.bootcss.com/vue/2.5.0/vue.js"><\/script>\n<script>\n    Vue.component(\'fade\', {\n        props: [\'show\'],\n        template: `\n            <transition @before-enter="handleBeforeEnter"\n                        @enter="handleEnter">\n                <slot v-if="show"></slot>\n            </transition>\n        `,\n        methods: {\n            handleBeforeEnter: function(el) {\n                el.style.opacity = 0;\n            },\n            handleEnter: function(el, done) {\n                setTimeout(() => {\n                    el.style.opacity = 1;\n                    done();\n                }, 1000);\n            }\n        }\n    })\n    var vm = new Vue({\n        el: "#container",\n        data: function () {\n            return {\n                show: true\n            }\n        },\n        methods: {\n            handleClick: function () {\n                this.show = !this.show;\n            }\n        }\n    });\n<\/script>\n\n</html>\n')])])])}],!1,null,null,null);t.default=i.exports}}]);